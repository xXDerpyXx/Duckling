(include "kit/macros")
(import-namespace kit)


(require! 'cheerio
          'http
          )
(alias-macro tap also)
(var model (.spawn Model)
     )

(def-interface String-stream (*stream)
  (def-generic accumulate (*stream)
    (make-promise
     (var r "")
     (on  *stream 'data (chunk)
          (incr-by r chunk))
     (once *stream 'end ()
           (success r)))))
(def compile-html (s)
  (.then s cheerio))
(def locate-links (h)
  (each h ()))
(def-interface Document-node ()
  )
(def-interface Request-system
    ((cache (.spawn Tree-map)))

  (Requester)
  (def find (url)
    (remember this.cache ks (.spawn Requester url )))

  (def remove ())
  (def update ()))
(def-interface )

(.get http "https://en.wikipedia.org/wiki/Conceptual_model"
      (#-> String-stream.accumulate
           compile-html
           (also locate-links)
           tokenize
           Model.train

           )
      )


