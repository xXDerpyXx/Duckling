(namespace interface)

(include "./interface/header")

(import-namespace kit)

(var Interface {})

(describe Interface

          ( *symbols {})
          ( *types {})

          (init (name *obj (*types {}) (*symbols {})))

          (def-generic define
              (name

               *obj *types *symbols

               ( *shares (or *obj.borrows *obj.shares []))
               ( *ext (or *obj.extend {}))
               ( *build *obj.build))


            (if (in  *symbols name)

                (mixin *obj (get *types (get *symbols name)))
                (.create this name *obj)))

          (def-generic create

              (name

               *obj *types *symbols

               (*shares (or *obj.borrows *obj.shares []))
               (*ext (or *obj.extend {}))
               (*build *obj.build)
               (*symbol (Symbol name)))
            (collect m 

                     (set *symbols name *symbol)
                     (set *types  *symbol m)

                     (if *build (.build m )))
            (var interface (extend  *ext (mixin  [ (lit name (symbol *symbol)) (dots *shares) ] *obj)))
            (mixin interface (lambda () (.apply interface.init this arguments)))
            ))

(export Interface )
